/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package imageeditor;

import java.awt.Color;
import java.awt.Image;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.filechooser.FileNameExtensionFilter;


/**
 *
 * @author danie
 */
public class MainFrame  extends javax.swing.JFrame  {
    
    
//    public void principal() throws IOException {
//    
//    
//    Band band = new Band();
//    int valor = 0;
//    BufferedImage bandImgRed = band.allRed(image, valor);
//    BufferedImage bandImgGreen = band.allGreen(image, valor);
//    BufferedImage bandImgBlue = band.allBlue(image, valor);
//    
//    Binary bin = new Binary();
//    int limiar = 0;
//    BufferedImage binaryImage = bin.binary(image, limiar);
//    
//    Grayscale gray = new Grayscale();
//    BufferedImage grayImageRed = gray.grayRed(image);
//    BufferedImage grayImageGreen = gray.grayGreen(image);
//    BufferedImage graysImageBlue = gray.grayBlue(image);
//    BufferedImage graysImageRGB = gray.grayRGB(image);
//    
//    Negative neg = new Negative();
//    BufferedImage negative = neg.negative(image);
//    
//    Filtering fil = new Filtering();
//    BufferedImage filteringImg = fil.YIQtoRGB(fil.RGBtoYIQ(image));
//    
//   
//    }
    JFileChooser fileChooser = new JFileChooser();
    FileNameExtensionFilter filter = new FileNameExtensionFilter ("3 Extensions Supported", "jpg", "png", "jpeg");
    
    
    public void pegarImagem() throws IOException {
        fileChooser.setFileFilter(filter);
        int selected = fileChooser.showOpenDialog(null);
        if (selected == JFileChooser.APPROVE_OPTION) {
            File file = fileChooser.getSelectedFile();
            String getSelectedImage = file.getAbsolutePath();
            File file2 = new File(getSelectedImage);
            BufferedImage imagem = ImageIO.read(file2);
            
            //make image fit
            Image teste = (Image) imagem;
            ImageIcon imIco =  new ImageIcon(teste);
            Image imFit =  imIco.getImage ();
            
            
           
            
            Image imgFit = imFit.getScaledInstance (labelMain.getWidth(), labelMain.getHeight (), Image.SCALE_SMOOTH);
            labelMain.setIcon (new ImageIcon(imgFit));
            
            imFit.getScaledInstance (bandRGB.getWidth(), bandRGB.getHeight (), Image.SCALE_SMOOTH);
            bandRGB.setIcon (new ImageIcon(imgFit));
            
            imFit.getScaledInstance (grayscale.getWidth(), grayscale.getHeight (), Image.SCALE_SMOOTH);
            grayscale.setIcon (new ImageIcon(imgFit));
            
            imFit.getScaledInstance (yiq.getWidth(), yiq.getHeight (), Image.SCALE_SMOOTH);
            yiq.setIcon (new ImageIcon(imgFit));
            
            imFit.getScaledInstance (negative.getWidth(), negative.getHeight (), Image.SCALE_SMOOTH);
            negative.setIcon (new ImageIcon(imgFit));
            
           imFit.getScaledInstance (binary.getWidth(), binary.getHeight (), Image.SCALE_SMOOTH);
            binary.setIcon (new ImageIcon(imgFit));
            
             imFit.getScaledInstance (yiq1.getWidth(), yiq1.getHeight (), Image.SCALE_SMOOTH);
            yiq1.setIcon (new ImageIcon(imgFit));
            
             imFit.getScaledInstance (yiq2.getWidth(), yiq2.getHeight (), Image.SCALE_SMOOTH);
            yiq2.setIcon (new ImageIcon(imgFit));
            
            imFit.getScaledInstance (yiq3.getWidth(), yiq3.getHeight (), Image.SCALE_SMOOTH);
            yiq3.setIcon (new ImageIcon(imgFit));
            
        }
    }
    

    /**
     * Creates new form MainFrame
     */
    public MainFrame() {
        initComponents();

    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        RGBBand = new javax.swing.ButtonGroup();
        Grayscale = new javax.swing.ButtonGroup();
        jPanel4 = new javax.swing.JPanel();
        labelMain = new javax.swing.JLabel();
        exitBtn = new javax.swing.JButton();
        selectBtn = new javax.swing.JButton();
        Panel = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        bandRGB = new javax.swing.JLabel();
        redRGBopt = new javax.swing.JRadioButton();
        greenRGBopt = new javax.swing.JRadioButton();
        blueRGBopt = new javax.swing.JRadioButton();
        submitRGB = new javax.swing.JButton();
        bandValue = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        grayscale = new javax.swing.JLabel();
        grayscaleRed = new javax.swing.JRadioButton();
        grayscaleBlue = new javax.swing.JRadioButton();
        grayscaleGreen = new javax.swing.JRadioButton();
        grayscaleAverage = new javax.swing.JRadioButton();
        submitGrayscale = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        negative = new javax.swing.JLabel();
        submitNegative = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        binary = new javax.swing.JLabel();
        threshold = new javax.swing.JTextField();
        submitBinary = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        yiq = new javax.swing.JLabel();
        submitIncrement = new javax.swing.JButton();
        jPanel7 = new javax.swing.JPanel();
        yiq1 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        jPanel8 = new javax.swing.JPanel();
        yiq2 = new javax.swing.JLabel();
        jTextField3 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jPanel9 = new javax.swing.JPanel();
        yiq3 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        labelMain.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        exitBtn.setText("Exit");
        exitBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitBtnActionPerformed(evt);
            }
        });

        selectBtn.setText("Select Image");
        selectBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selectBtnActionPerformed(evt);
            }
        });

        bandRGB.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        RGBBand.add(redRGBopt);
        redRGBopt.setText("Red");
        redRGBopt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                redRGBoptActionPerformed(evt);
            }
        });

        RGBBand.add(greenRGBopt);
        greenRGBopt.setText("Green");

        RGBBand.add(blueRGBopt);
        blueRGBopt.setText("Blue");

        submitRGB.setText("Submit");
        submitRGB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitRGBActionPerformed(evt);
            }
        });

        bandValue.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bandValueActionPerformed(evt);
            }
        });

        jLabel2.setText("Digit a value:");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel2))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(submitRGB))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(redRGBopt)
                                .addGap(38, 38, 38)
                                .addComponent(greenRGBopt)
                                .addGap(47, 47, 47)
                                .addComponent(blueRGBopt)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(bandValue, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 25, Short.MAX_VALUE)
                .addComponent(bandRGB, javax.swing.GroupLayout.PREFERRED_SIZE, 330, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(bandRGB, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 40, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bandValue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(greenRGBopt)
                    .addComponent(blueRGBopt)
                    .addComponent(redRGBopt))
                .addGap(26, 26, 26)
                .addComponent(submitRGB)
                .addContainerGap(42, Short.MAX_VALUE))
        );

        Panel.addTab("Band", jPanel1);

        grayscale.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        Grayscale.add(grayscaleRed);
        grayscaleRed.setText("Red");

        Grayscale.add(grayscaleBlue);
        grayscaleBlue.setText("Blue");

        Grayscale.add(grayscaleGreen);
        grayscaleGreen.setText("Green");

        Grayscale.add(grayscaleAverage);
        grayscaleAverage.setText("Average");

        submitGrayscale.setText("Submit");
        submitGrayscale.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitGrayscaleActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addComponent(grayscale, javax.swing.GroupLayout.PREFERRED_SIZE, 330, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(grayscaleBlue)
                            .addComponent(grayscaleRed))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(grayscaleGreen)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(grayscaleAverage)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(submitGrayscale)))))
                .addContainerGap(24, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(grayscale, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(47, 47, 47)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(grayscaleRed)
                    .addComponent(grayscaleGreen))
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(grayscaleBlue)
                            .addComponent(grayscaleAverage)))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(submitGrayscale)))
                .addContainerGap(67, Short.MAX_VALUE))
        );

        Panel.addTab("Grayscale", jPanel3);

        negative.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        submitNegative.setText("Submit");
        submitNegative.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitNegativeActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(negative, javax.swing.GroupLayout.PREFERRED_SIZE, 330, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(146, 146, 146)
                        .addComponent(submitNegative)))
                .addContainerGap(25, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(negative, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(68, 68, 68)
                .addComponent(submitNegative)
                .addContainerGap(90, Short.MAX_VALUE))
        );

        Panel.addTab("Negative", jPanel5);

        binary.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        submitBinary.setText("Submit");
        submitBinary.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitBinaryActionPerformed(evt);
            }
        });

        jLabel1.setText("Digit a treshold:");

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(binary, javax.swing.GroupLayout.PREFERRED_SIZE, 330, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(78, 78, 78)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(threshold))
                        .addGap(49, 49, 49)
                        .addComponent(submitBinary, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(25, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(binary, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(53, 53, 53)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(threshold, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(submitBinary))
                .addContainerGap(83, Short.MAX_VALUE))
        );

        Panel.addTab("Binary", jPanel6);

        yiq.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        submitIncrement.setText("Submit");
        submitIncrement.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitIncrementActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(26, Short.MAX_VALUE)
                .addComponent(yiq, javax.swing.GroupLayout.PREFERRED_SIZE, 330, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(19, 19, 19))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(148, 148, 148)
                .addComponent(submitIncrement)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(yiq, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(74, 74, 74)
                .addComponent(submitIncrement)
                .addContainerGap(83, Short.MAX_VALUE))
        );

        Panel.addTab("Increment", jPanel2);

        yiq1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jButton2.setText("Submit");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(yiq1, javax.swing.GroupLayout.PREFERRED_SIZE, 330, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(25, Short.MAX_VALUE))
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(70, 70, 70)
                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton2)
                .addGap(68, 68, 68))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addComponent(yiq1, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(72, 72, 72)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2))
                .addContainerGap(73, Short.MAX_VALUE))
        );

        Panel.addTab("IncrementSum", jPanel7);

        yiq2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jTextField3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField3ActionPerformed(evt);
            }
        });

        jButton1.setText("Submit");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                .addContainerGap(23, Short.MAX_VALUE)
                .addComponent(yiq2, javax.swing.GroupLayout.PREFERRED_SIZE, 330, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(22, 22, 22))
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGap(69, 69, 69)
                .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addGap(80, 80, 80))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(yiq2, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(65, 65, 65)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1))
                .addContainerGap(89, Short.MAX_VALUE))
        );

        Panel.addTab("IncrementMul", jPanel8);

        yiq3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jButton3.setText("Submit");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel9Layout.createSequentialGroup()
                .addContainerGap(23, Short.MAX_VALUE)
                .addComponent(yiq3, javax.swing.GroupLayout.PREFERRED_SIZE, 330, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(22, 22, 22))
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGap(149, 149, 149)
                .addComponent(jButton3)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(yiq3, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(76, 76, 76)
                .addComponent(jButton3)
                .addContainerGap(78, Short.MAX_VALUE))
        );

        Panel.addTab("IncrementNeg", jPanel9);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(34, 34, 34)
                        .addComponent(exitBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(37, 37, 37)
                        .addComponent(selectBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(66, 66, 66)
                        .addComponent(labelMain, javax.swing.GroupLayout.PREFERRED_SIZE, 330, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 41, Short.MAX_VALUE)
                .addComponent(Panel, javax.swing.GroupLayout.PREFERRED_SIZE, 375, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(Panel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(94, 94, 94)
                        .addComponent(labelMain, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(59, 59, 59)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(selectBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(exitBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(8, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(17, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void exitBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitBtnActionPerformed
        System.exit(0);
    }//GEN-LAST:event_exitBtnActionPerformed

    private void submitRGBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitRGBActionPerformed

        String text = bandValue.getText();
        
        if (text.isEmpty()) { 
            text = "0";
        }
        
        int valor = Integer.parseInt(text);
        
        
        
        if (redRGBopt.isSelected()) {
           try {
                File file = fileChooser.getSelectedFile();
                String getSelectedImage = file.getAbsolutePath();
                File file2 = new File(getSelectedImage);
                BufferedImage imagem = ImageIO.read(file2);
                
                Band band = new Band();
                
                BufferedImage bandImgRed = band.allRed(imagem, valor);
                
                
                //make image fit
                Image teste = (Image) bandImgRed;
                ImageIcon imIco =  new ImageIcon(teste);            
                Image imFit =  imIco.getImage ();
                Image imgFit = imFit.getScaledInstance (bandRGB.getWidth(), bandRGB.getHeight (), Image.SCALE_SMOOTH);
                bandRGB.setIcon (new ImageIcon(imgFit));
                
            } catch (IOException ex) {
                Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
            }                      
        } else if (greenRGBopt.isSelected()) {
           try {
                File file = fileChooser.getSelectedFile();
                String getSelectedImage = file.getAbsolutePath();
                File file2 = new File(getSelectedImage);
                BufferedImage imagem = ImageIO.read(file2);
                
                Band band = new Band();
                BufferedImage bandImgRed = band.allGreen(imagem, valor);
                
                
                //make image fit
                Image teste = (Image) bandImgRed;
                ImageIcon imIco =  new ImageIcon(teste);            
                Image imFit =  imIco.getImage ();
                Image imgFit = imFit.getScaledInstance (bandRGB.getWidth(), bandRGB.getHeight (), Image.SCALE_SMOOTH);
                bandRGB.setIcon (new ImageIcon(imgFit));
                
            } catch (IOException ex) {
                Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
            } 
        } else if (blueRGBopt.isSelected()) {
            try {
                File file = fileChooser.getSelectedFile();
                String getSelectedImage = file.getAbsolutePath();
                File file2 = new File(getSelectedImage);
                BufferedImage imagem = ImageIO.read(file2);
                
                Band band = new Band();
                BufferedImage bandImgRed = band.allBlue(imagem, valor);
                
                
                //make image fit
                Image teste = (Image) bandImgRed;
                ImageIcon imIco =  new ImageIcon(teste);            
                Image imFit =  imIco.getImage ();
                Image imgFit = imFit.getScaledInstance (bandRGB.getWidth(), bandRGB.getHeight (), Image.SCALE_SMOOTH);
                bandRGB.setIcon (new ImageIcon(imgFit));
                
            } catch (IOException ex) {
                Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
            }      
        }
        
        bandValue.setText("");
       
    }//GEN-LAST:event_submitRGBActionPerformed

    private void selectBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selectBtnActionPerformed
        try {
            pegarImagem();
        } catch (IOException ex) {
            Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_selectBtnActionPerformed

    private void redRGBoptActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_redRGBoptActionPerformed
//        BufferedImage imagemsaidaR = allRed(image, valor);
    }//GEN-LAST:event_redRGBoptActionPerformed

    private void submitGrayscaleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitGrayscaleActionPerformed
        if (grayscaleAverage.isSelected()) {
            
        
        fileChooser.setFileFilter(filter);
        
            try {
                File file = fileChooser.getSelectedFile();
                String getSelectedImage = file.getAbsolutePath();
                File file2 = new File(getSelectedImage);
                BufferedImage imagem = ImageIO.read(file2);
                
                 Grayscale gray = new Grayscale();
                 BufferedImage graysImageRGB = gray.grayRGB(imagem);
                //make image fit
                Image teste = (Image) graysImageRGB;
                ImageIcon imIco =  new ImageIcon(teste);            
                Image imFit =  imIco.getImage ();
                Image imgFit = imFit.getScaledInstance (grayscale.getWidth(), grayscale.getHeight (), Image.SCALE_SMOOTH);
                grayscale.setIcon (new ImageIcon(imgFit));
                
            } catch (IOException ex) {
                Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
            }
        
        } else if (grayscaleRed.isSelected()) {
            try {
                File file = fileChooser.getSelectedFile();
                String getSelectedImage = file.getAbsolutePath();
                File file2 = new File(getSelectedImage);
                BufferedImage imagem = ImageIO.read(file2);
                
                 Grayscale gray = new Grayscale();
                 BufferedImage graysImageRGB = gray.grayRed(imagem);
                //make image fit
                Image teste = (Image) graysImageRGB;
                ImageIcon imIco =  new ImageIcon(teste);            
                Image imFit =  imIco.getImage ();
                Image imgFit = imFit.getScaledInstance (grayscale.getWidth(), grayscale.getHeight (), Image.SCALE_SMOOTH);
                grayscale.setIcon (new ImageIcon(imgFit));
                
            } catch (IOException ex) {
                Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else if (grayscaleGreen.isSelected()) {
                    try {
                        File file = fileChooser.getSelectedFile();
                        String getSelectedImage = file.getAbsolutePath();
                        File file2 = new File(getSelectedImage);
                        BufferedImage imagem = ImageIO.read(file2);

                         Grayscale gray = new Grayscale();
                         BufferedImage graysImageRGB = gray.grayGreen(imagem);
                        //make image fit
                        Image teste = (Image) graysImageRGB;
                        ImageIcon imIco =  new ImageIcon(teste);            
                        Image imFit =  imIco.getImage ();
                        Image imgFit = imFit.getScaledInstance (grayscale.getWidth(), grayscale.getHeight (), Image.SCALE_SMOOTH);
                        grayscale.setIcon (new ImageIcon(imgFit));

                    } catch (IOException ex) {
                        Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
                    }
        } else if (grayscaleBlue.isSelected()) {
             try {
                File file = fileChooser.getSelectedFile();
                String getSelectedImage = file.getAbsolutePath();
                File file2 = new File(getSelectedImage);
                BufferedImage imagem = ImageIO.read(file2);
                
                 Grayscale gray = new Grayscale();
                 BufferedImage graysImageRGB = gray.grayBlue(imagem);
                //make image fit
                Image teste = (Image) graysImageRGB;
                ImageIcon imIco =  new ImageIcon(teste);            
                Image imFit =  imIco.getImage ();
                Image imgFit = imFit.getScaledInstance (grayscale.getWidth(), grayscale.getHeight (), Image.SCALE_SMOOTH);
                grayscale.setIcon (new ImageIcon(imgFit));
                
            } catch (IOException ex) {
                Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_submitGrayscaleActionPerformed

    private void submitNegativeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitNegativeActionPerformed
         try {
                File file = fileChooser.getSelectedFile();
                String getSelectedImage = file.getAbsolutePath();
                File file2 = new File(getSelectedImage);
                BufferedImage imagem = ImageIO.read(file2);
                
                 Negative neg = new Negative();
                 BufferedImage negativeImg = neg.negative(imagem);
                //make image fit
                Image teste = (Image) negativeImg;
                ImageIcon imIco =  new ImageIcon(teste);            
                Image imFit =  imIco.getImage ();
                Image imgFit = imFit.getScaledInstance (negative.getWidth(), negative.getHeight (), Image.SCALE_SMOOTH);
                negative.setIcon (new ImageIcon(imgFit));
                
            } catch (IOException ex) {
                Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
            }
    }//GEN-LAST:event_submitNegativeActionPerformed

    private void submitIncrementActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitIncrementActionPerformed
       try {
                File file = fileChooser.getSelectedFile();
                String getSelectedImage = file.getAbsolutePath();
                File file2 = new File(getSelectedImage);
                BufferedImage imagem = ImageIO.read(file2);
                
                 Filtering fil = new Filtering();
                 BufferedImage filtering = fil.YIQtoRGB(fil.RGBtoYIQ(imagem));
                //make image fit
                Image teste = (Image) filtering;
                ImageIcon imIco =  new ImageIcon(teste);            
                Image imFit =  imIco.getImage ();
                Image imgFit = imFit.getScaledInstance (yiq.getWidth(), yiq.getHeight (), Image.SCALE_SMOOTH);
                yiq.setIcon (new ImageIcon(imgFit));
                
            } catch (IOException ex) {
                Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
            }
    }//GEN-LAST:event_submitIncrementActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        
         String text = jTextField3.getText();
        
        if (text.isEmpty()) { 
            text = "0";
        }
        
        int valor = Integer.parseInt(text);       
                
                
        try {
                File file = fileChooser.getSelectedFile();
                String getSelectedImage = file.getAbsolutePath();
                File file2 = new File(getSelectedImage);
                BufferedImage imagem = ImageIO.read(file2);
                
                 IncrementMul FilMul = new IncrementMul();
                 BufferedImage filteringMul = FilMul.YIQtoRGB(FilMul.RGBtoYIQ(imagem), valor);
                //make image fit
                Image teste = (Image) filteringMul;
                ImageIcon imIco =  new ImageIcon(teste);            
                Image imFit =  imIco.getImage ();
                Image imgFit = imFit.getScaledInstance (yiq2.getWidth(), yiq2.getHeight (), Image.SCALE_SMOOTH);
                yiq2.setIcon (new ImageIcon(imgFit));
                
            } catch (IOException ex) {
                Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
            }
        
        jTextField3.setText("");
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        
        
         String text = jTextField1.getText();
        
        if (text.isEmpty()) { 
            text = "0";
        }
        
        int valor = Integer.parseInt(text);       
                
                
        try {
                File file = fileChooser.getSelectedFile();
                String getSelectedImage = file.getAbsolutePath();
                File file2 = new File(getSelectedImage);
                BufferedImage imagem = ImageIO.read(file2);
                
                 IncrementSum FilSum = new IncrementSum();
                 BufferedImage filteringSum = FilSum.YIQtoRGB(FilSum.RGBtoYIQ(imagem), valor);
                //make image fit
                Image teste = (Image) filteringSum;
                ImageIcon imIco =  new ImageIcon(teste);            
                Image imFit =  imIco.getImage ();
                Image imgFit = imFit.getScaledInstance (yiq1.getWidth(), yiq1.getHeight (), Image.SCALE_SMOOTH);
                yiq1.setIcon (new ImageIcon(imgFit));
                
            } catch (IOException ex) {
                Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
            }
        
        jTextField1.setText("");
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
         try {
                File file = fileChooser.getSelectedFile();
                String getSelectedImage = file.getAbsolutePath();
                File file2 = new File(getSelectedImage);
                BufferedImage imagem = ImageIO.read(file2);
                
                 FilteringNeg FilNeg = new FilteringNeg();
                 BufferedImage filteringNeg = FilNeg.YIQtoRGB(FilNeg.RGBtoYIQ(imagem));
                //make image fit
                Image teste = (Image) filteringNeg;
                ImageIcon imIco =  new ImageIcon(teste);            
                Image imFit =  imIco.getImage ();
                Image imgFit = imFit.getScaledInstance (yiq3.getWidth(), yiq3.getHeight (), Image.SCALE_SMOOTH);
                yiq3.setIcon (new ImageIcon(imgFit));
                
            } catch (IOException ex) {
                Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
            }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void bandValueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bandValueActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_bandValueActionPerformed

    private void submitBinaryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitBinaryActionPerformed
        String text = threshold.getText();
        
        if (text.isEmpty()) { 
            text = "0";
        }
        
        int valor = Integer.parseInt(text);
        
         try {
                File file = fileChooser.getSelectedFile();
                String getSelectedImage = file.getAbsolutePath();
                File file2 = new File(getSelectedImage);
                BufferedImage imagem = ImageIO.read(file2);
                
                 Binary bin = new Binary();
                 BufferedImage thresholdImg = bin.binary(imagem, valor);
                //make image fit
                Image teste = (Image) thresholdImg;
                ImageIcon imIco =  new ImageIcon(teste);            
                Image imFit =  imIco.getImage ();
                Image imgFit = imFit.getScaledInstance (binary.getWidth(), binary.getHeight (), Image.SCALE_SMOOTH);
                binary.setIcon (new ImageIcon(imgFit));
                
            } catch (IOException ex) {
                Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
            }
         
         threshold.setText("");
    }//GEN-LAST:event_submitBinaryActionPerformed

    private void jTextField3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField3ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup Grayscale;
    private javax.swing.JTabbedPane Panel;
    private javax.swing.ButtonGroup RGBBand;
    private javax.swing.JLabel bandRGB;
    private javax.swing.JTextField bandValue;
    private javax.swing.JLabel binary;
    private javax.swing.JRadioButton blueRGBopt;
    private javax.swing.JButton exitBtn;
    private javax.swing.JLabel grayscale;
    private javax.swing.JRadioButton grayscaleAverage;
    private javax.swing.JRadioButton grayscaleBlue;
    private javax.swing.JRadioButton grayscaleGreen;
    private javax.swing.JRadioButton grayscaleRed;
    private javax.swing.JRadioButton greenRGBopt;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JLabel labelMain;
    private javax.swing.JLabel negative;
    private javax.swing.JRadioButton redRGBopt;
    private javax.swing.JButton selectBtn;
    private javax.swing.JButton submitBinary;
    private javax.swing.JButton submitGrayscale;
    private javax.swing.JButton submitIncrement;
    private javax.swing.JButton submitNegative;
    private javax.swing.JButton submitRGB;
    private javax.swing.JTextField threshold;
    private javax.swing.JLabel yiq;
    private javax.swing.JLabel yiq1;
    private javax.swing.JLabel yiq2;
    private javax.swing.JLabel yiq3;
    // End of variables declaration//GEN-END:variables
}
